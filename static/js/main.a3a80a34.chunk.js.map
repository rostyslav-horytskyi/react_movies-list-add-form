{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","focusOnInput","changeInputField","event","target","id","value","setState","lossFocusFromTheInput","splice","indexOf","push","this","length","linkReg","errorUrl","match","onAdd","props","newMovie","createNewMovie","lenghtCheck","lengthCheckAllField","validateUrl","validateUrlAddress","type","onChange","e","onBlur","includes","onClick","preventDefault","clearField","disabled","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3a80a34.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    focusOnInput: [],\n  };\n\n  changeInputField = (event) => {\n    const { id, value } = event.target;\n\n    this.setState({\n      [id]: value,\n    });\n  }\n\n  lossFocusFromTheInput = (event) => {\n    const { value, id } = event.target;\n    const { focusOnInput } = this.state;\n\n    if (!value) {\n      focusOnInput.push(id);\n    } else {\n      focusOnInput.splice(focusOnInput.indexOf(id), 1);\n    }\n\n    this.setState({ focusOnInput: [...focusOnInput] });\n  }\n\n  lengthCheckAllField() {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n    let disabled;\n\n    if (!title.length\n    || !description.length\n    || !imgUrl.length\n    || !imdbUrl.length\n    || !imdbId.length) {\n      disabled = true;\n    } else {\n      disabled = false;\n    }\n\n    return disabled;\n  }\n\n  clearField() {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  createNewMovie() {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    return {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n  }\n\n  validateUrlAddress() {\n    // eslint-disable-next-line max-len\n    const linkReg = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n    const { imgUrl, imdbUrl } = this.state;\n    const errorUrl = [];\n\n    if (!imgUrl.match(linkReg) && imgUrl.length !== 0) {\n      errorUrl.push('img');\n    }\n\n    if (!imdbUrl.match(linkReg) && imdbUrl.length !== 0) {\n      errorUrl.push('imdb');\n    }\n\n    return errorUrl;\n  }\n\n  render() {\n    const { onAdd } = this.props;\n    const newMovie = this.createNewMovie();\n    const lenghtCheck = this.lengthCheckAllField();\n    const validateUrl = this.validateUrlAddress();\n    const { focusOnInput } = this.state;\n\n    return (\n      <>\n        <form>\n          <label>\n            <p>Title</p>\n            <input\n              id=\"title\"\n              type=\"text\"\n              value={this.state.title}\n              onChange={e => this.changeInputField(e)}\n              onBlur={e => this.lossFocusFromTheInput(e)}\n            />\n            {focusOnInput.includes('title') && (\n              <div className=\"empty_field_error\">\n                Please enter text!\n              </div>\n            )}\n          </label>\n\n          <label>\n            <p>Description</p>\n            <input\n              id=\"description\"\n              type=\"text\"\n              value={this.state.description}\n              onChange={e => this.changeInputField(e)}\n              onBlur={e => this.lossFocusFromTheInput(e)}\n            />\n            {focusOnInput.includes('description') && (\n              <div className=\"empty_field_error\">\n                Please enter text!\n              </div>\n            )}\n          </label>\n\n          <label>\n            <p>imgUrl</p>\n            <input\n              id=\"imgUrl\"\n              type=\"text\"\n              value={this.state.imgUrl}\n              onChange={e => this.changeInputField(e)}\n              onBlur={e => this.lossFocusFromTheInput(e)}\n            />\n            {focusOnInput.includes('imgUrl') && (\n              <div className=\"empty_field_error\">\n                Please enter text!\n              </div>\n            )}\n            {validateUrl.includes('img') && (\n              <div className=\"empty_field_error\">\n                Invalid URL address!\n              </div>\n            )}\n          </label>\n\n          <label>\n            <p>imdbUrl</p>\n            <input\n              id=\"imdbUrl\"\n              type=\"text\"\n              value={this.state.imdbUrl}\n              onChange={e => this.changeInputField(e)}\n              onBlur={e => this.lossFocusFromTheInput(e)}\n            />\n            {focusOnInput.includes('imdbUrl') && (\n              <div className=\"empty_field_error\">\n                Please enter text!\n              </div>\n            )}\n            {validateUrl.includes('imdb') && (\n              <div className=\"empty_field_error\">\n                Invalid URL address!\n              </div>\n            )}\n          </label>\n\n          <label>\n            <p>imdbId</p>\n            <input\n              id=\"imdbId\"\n              type=\"text\"\n              value={this.state.imdbId}\n              onChange={e => this.changeInputField(e)}\n              onBlur={e => this.lossFocusFromTheInput(e)}\n            />\n            {focusOnInput.includes('imdbId') && (\n              <div className=\"empty_field_error\">\n                Please enter text!\n              </div>\n            )}\n          </label>\n        </form>\n\n        <button\n          type=\"submit\"\n          onClick={(e) => {\n            e.preventDefault();\n            onAdd(newMovie);\n            this.clearField();\n          }}\n          disabled={lenghtCheck}\n        >\n          Add new movie\n        </button>\n      </>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({ movies: [...state.movies, movie] }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}